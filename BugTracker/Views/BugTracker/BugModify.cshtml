@model BugTracker.Models.Bug

@{
    ViewBag.Title = "BugModify";
}

<h2>BugModify</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bug</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.bugId)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if ((string)Session["authority"] != "tester")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.progress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.progress, (IEnumerable<SelectListItem>)ViewBag.Progress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.progress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.solution, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.solution, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.solution, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        <div class="form-group">
            @Html.LabelFor(model => model.project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.project, (IEnumerable<SelectListItem>)ViewBag.Projects, htmlAttributes: new { @id = "listId" })
                @Html.ValidationMessageFor(model => model.project, "", new { @class = "text-danger" })
                @Html.TextBox("projectalternative", null, new { id = "projectTB" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            $("#projectTB").hide();
            $("#listId").change(function () {
                var value = document.getElementById("listId").value;
                if (value == "new project") {
                    $("#projectTB").show();
                }
                else {
                    $("#projectTB").hide();
                }
            });
        })
    </script>

}